<ResourceDictionary x:Class="HexadEditor.Dictionary.ControlTemplates"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HexadEditor.Dictionary"
                    xmlns:ctlr="clr-namespace:HexadEditor.Utilities.Controls">

    <!--TEXTBOX STYLES-->
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GrayBrush4}"/>
        <Setter Property="SelectionBrush" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0,2"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
        <EventSetter Event="KeyDown" Handler="OnTextBox_KeyDown"/>
    </Style>

    <!--TEXTBOX (NumberBox / Rename)-->
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle_WithRename" BasedOn="{StaticResource TextBoxStyle}">
        <EventSetter Event="KeyDown" Handler="OnTextBoxRename_KeyDown"/>
        <EventSetter Event="LostFocus" Handler="OnTextBoxRename_LostFocus"/>
    </Style>

    <!--LIGHT TEXTBLOCK STYLE-->
    <Style TargetType="{x:Type TextBlock}" x:Key="LightTextBlockStyle">
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
    </Style>

    <!--ERROR TEXTBLOCK STYLE-->
    <Style TargetType="{x:Type TextBlock}" x:Key="ErrorTextBlockStyle">
        <Setter Property="Foreground" Value="{DynamicResource Editor.RedBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <!--SIMPLE BUTTON STYLE-->
    <Style x:Key="SimpleButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush3}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GrayBrush5}"/>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <!--MOUSE OVER-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Editor.Window.GrayBrush5}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--CLOSE WINDOW BUTTON STYLE-->
    <Style x:Key="CloseWindowButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush3}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GrayBrush5}"/>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <!--MOUSE OVER-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Editor.RedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--EDITOR WINDOW STYLES-->
    <Style x:Key="HexadWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush1}"/>

        <!--Editor Window Styling-->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CornerRadius="0"
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                    GlassFrameThickness="0" 
                    CaptionHeight="20"
                    NonClientFrameEdges="None"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid>
                            <!--WINDOW CONTENT-->
                            <AdornerDecorator>
                                <ContentPresenter Margin="5,24,5,5"/>
                            </AdornerDecorator>

                            <!--WINDOW DOCK-->
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">

                                <!--APPLIES TO ALL BUTTONS IN THIS DOCKPANEL-->
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource SimpleButton}"> <!--GETS SIMPLE BUTTON TEMPLATE-->
                                        <Setter Property="Width" Value="31"/>
                                        <Setter Property="Height" Value="25"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>
                                
                                <!--WINDOW TITLE-->
                                <TextBlock Margin="5,2,0,0" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" FontWeight="Bold"
                                           Foreground="{DynamicResource Editor.FontBrush}"
                                           Text="{TemplateBinding Title}"/>

                                <!--CLOSE BUTTON-->
                                <Button x:Name="btnClose" Click="OnClose_Button_Click" Margin="0">
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M1,1.5L 8,8.5" Margin="0"/>
                                            <Path Data="M1,8.5L 8,1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>

                                <!--FULLSCREEN/RESTORE BUTTON-->
                                <Button x:Name="btnRestore" Click="OnMaximizeRestore_Button_Click" Margin="0">
                                    <Button.Content>
                                        <Rectangle Stroke="{DynamicResource Editor.FontBrush}" StrokeThickness="1"
                                                   Width="10" Height="8"/>
                                    </Button.Content>
                                </Button>

                                <!--MINIMIZE BUTTON-->
                                <Button x:Name="btnMinimize" Click="OnMinimize_Button_Click" Margin="0">
                                    <Button.Content>
                                        <Rectangle Stroke="{DynamicResource Editor.FontBrush}" StrokeThickness="1"
                                                   Width="10" Height="1" Margin="0,4,0,0"/>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PROJECT BROWSER WINDOW STYLE-->
    <Style x:Key="ProjectBrowserWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush1}"/>

        <!--Editor Window Styling-->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CornerRadius="0"
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                    GlassFrameThickness="0" 
                    CaptionHeight="20"
                    NonClientFrameEdges="None"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid>
                            <!--WINDOW CONTENT-->
                            <AdornerDecorator>
                                <ContentPresenter Margin="5,24,5,5"/>
                            </AdornerDecorator>

                            <!--WINDOW DOCK-->
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">

                                <!--APPLIES TO ALL BUTTONS IN THIS DOCKPANEL-->
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource CloseWindowButton}">
                                        <!--GETS SIMPLE BUTTON TEMPLATE-->
                                        <Setter Property="Width" Value="31"/>
                                        <Setter Property="Height" Value="21"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>

                                <!--WINDOW TITLE-->
                                <TextBlock Margin="5,2,0,0" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" FontWeight="Bold"
                                           Foreground="{DynamicResource Editor.FontBrush}"
                                           Text="{TemplateBinding Title}"/>

                                <!--CLOSE BUTTON-->
                                <Button x:Name="btnClose" Click="OnClose_Button_Click" Margin="0,0,0,0">
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M1,1.5L 8,8.5" Margin="0"/>
                                            <Path Data="M1,8.5L 8,1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--FOCUS VISUAL-->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="True" 
                                   StrokeThickness="1" Stroke="{DynamicResource Editor.FontBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--BUTTONS-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{DynamicResource Editor.Window.GrayColor5}" Offset="0"/>
                    <GradientStop Color="{DynamicResource Editor.Window.GrayColor4}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{DynamicResource Editor.Window.GrayColor6}" Offset="0"/>
                    <GradientStop Color="{DynamicResource Editor.Window.GrayColor2}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="BorderThickness" Value="0,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <!--Opacity/Gradient Brushes-->
                    <ControlTemplate.Resources>
                        <!--OPACITY BRUSH-->
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="Button.Selected.OpacityBrush">
                            <GradientStop Color="White" Offset="0"/>
                            <GradientStop Color="#88ffffff" Offset="1"/>
                        </LinearGradientBrush>

                        <!--REVERSED OPACITY BRUSH (Pressed)-->
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="Button.Pressed.OpacityBrush">
                            <GradientStop Color="#88ffffff" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>

                        <!--Disabled Background BRUSH-->
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="Button.Disabled.BackgroundBrush">
                            <GradientStop Color="{DynamicResource Editor.Window.GrayColor4}" Offset="0"/>
                            <GradientStop Color="{DynamicResource Editor.Window.GrayColor3}" Offset="1"/>
                        </LinearGradientBrush>

                        <!--Disabled Border BRUSH-->
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="Button.Disabled.BorderBrush">
                            <GradientStop Color="{DynamicResource Editor.Window.GrayColor5}" Offset="0"/>
                            <GradientStop Color="{DynamicResource Editor.Window.GrayColor1}" Offset="1"/>
                        </LinearGradientBrush>
                    </ControlTemplate.Resources>

                    <!--Grid-->
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True" CornerRadius="3"/>
                        <Border x:Name="borderSelected" SnapsToDevicePixels="True" CornerRadius="3" BorderThickness="0" BorderBrush="Transparent"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>

                    <!--BUTTON FOCUS BEHAVIORS-->
                    <ControlTemplate.Triggers>
                        <!--DEFAULTED BUTTON-->
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="Background" TargetName="borderSelected"
                                        Value="{DynamicResource Editor.Window.GrayBrush6}"/>
                            <Setter Property="OpacityMask" TargetName="borderSelected" 
                                        Value="{StaticResource Button.Selected.OpacityBrush}"/>
                        </Trigger>

                        <!--MOUSED OVER BUTTON-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Background" TargetName="borderSelected"
                                        Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                            <Setter Property="OpacityMask" TargetName="borderSelected" 
                                        Value="{StaticResource Button.Selected.OpacityBrush}"/>
                        </Trigger>

                        <!--PRESSED BUTTON-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Background" TargetName="borderSelected"
                                        Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                            <Setter Property="OpacityMask" TargetName="borderSelected" 
                                        Value="{StaticResource Button.Pressed.OpacityBrush}"/>
                        </Trigger>

                        <!--DISABLED BUTTON-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" 
                                        Value="{DynamicResource Editor.Disabled.FontBrush}"/>
                            <Setter Property="Background" TargetName="border"
                                        Value="{DynamicResource Button.Disabled.BackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" 
                                        Value="{StaticResource Button.Disabled.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LIST BOX ITEM STYLE-->
    <Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,2,0,2" />
        <Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <!--MOUSE OVER-->
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Editor.GreenBrush}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <!--NOT SELECTED-->
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" 
                                        Value="{DynamicResource Editor.Window.GrayBrush4}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <!--SELECTED ITEM-->
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Editor.GreenColor}" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <!--MOUSE OVER A NON-SELECTED, ACTIVE ITEM-->
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Editor.GreenColor}" Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <!--MOUSE OVER A NON-SELECTED, DISABLED ITEM-->
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" 
                                        Value="{DynamicResource Editor.Window.GrayBrush4}" />
                        </MultiTrigger>

                        <!--DISABLED-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" 
                                        Value="{DynamicResource Editor.Disabled.FontBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--LIST BOX STYLES-->
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GrayBrush4}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>

                    <!--TEMPLATE TRIGGERS-->
                    <ControlTemplate.Triggers>

                        <!--ACTIVE STYLE-->
                        <Trigger Property="Selector.IsSelectionActive" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                        </Trigger>

                        <!--DISABLED STYLE-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Editor.Window.GrayBrush2}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Editor.Window.GrayBrush4}"/>
                        </Trigger>

                        <!--MOUSE OVER INACTIVE-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" 
                                        Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                        </MultiTrigger>

                        <!--SCROLL IF ENOUGH ITEMS-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--NUMBER BOX STYLE-->
    <Style TargetType="{x:Type ctlr:NumberBox}" x:Key="{x:Type ctlr:NumberBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctlr:NumberBox}">
                    <Grid>
                        <!--main number box (with click and drag)-->
                        <TextBlock x:Name="PART_textBlock"
                                   Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="SizeWE"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                        <!--"invisible" textbox-->
                        <TextBox x:Name="PART_textBox" BorderThickness="0" Padding="0"
                                 Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=Explicit}"
                                 Foreground="{TemplateBinding Foreground}" Visibility="Collapsed"
                                 Style="{StaticResource TextBoxStyle_WithRename}" HorizontalAlignment="Center"/>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <!--Collapsed Top-TextBlock Style-->
                        <DataTrigger Binding="{Binding Visibility, ElementName=PART_textBox}" Value="Visible">
                            <Setter Property="Visibility" TargetName="PART_textBlock" Value="Collapsed"/>
                        </DataTrigger>
                        
                        <!--Mixed Values-->
                        <DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Background" TargetName="PART_textBlock" Value="{DynamicResource Editor.Disabled.FontBrush}"/>
                            <Setter Property="ToolTip" TargetName="PART_textBlock" Value="Mixed values"/>
                            <Setter Property="MinWidth" TargetName="PART_textBlock" Value="20"/>
                        </DataTrigger>                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SCALAR BOX STYLE-->
    <Style TargetType="{x:Type ctlr:ScalarBox}" x:Key="{x:Type ctlr:ScalarBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GrayBrush5}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="3000"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
        <Setter Property="Template">
            <Setter.Value>
                
                <!--VectorBox Control Template-->
                <ControlTemplate TargetType="{x:Type ctlr:ScalarBox}">
                    <Border x:Name="border" SnapsToDevicePixels="True" Margin="0,2,0,3"
                            Background="{TemplateBinding Background}" Padding="5,2"
                            BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--NumberBox Grid-->
                        <Grid MinWidth="50" x:Name="grid">
                            <!--main number box (with click and drag)-->
                            <TextBlock x:Name="PART_textBlock"
                                   Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <!--"invisible" textbox-->
                            <TextBox x:Name="PART_textBox" BorderThickness="0" Padding="0"
                                 Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=Explicit}"
                                 Foreground="{TemplateBinding Foreground}" Visibility="Collapsed"
                                 Style="{StaticResource TextBoxStyle_WithRename}" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--MOUSE OVER STYLE-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Editor.Window.GrayBrush6}"/>
                        </Trigger>

                        <!--DISABLED STYLE-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.5"/>
                        </Trigger>

                        <!--Collapsed Top-TextBlock Style-->
                        <DataTrigger Binding="{Binding Visibility, ElementName=PART_textBox}" Value="Visible">
                            <Setter Property="Visibility" TargetName="PART_textBlock" Value="Collapsed"/>
                        </DataTrigger>

                        <!--Mixed Values-->
                        <DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Background" TargetName="PART_textBlock" Value="{DynamicResource Editor.Disabled.FontBrush}"/>
                            <Setter Property="ToolTip" TargetName="PART_textBlock" Value="Mixed values"/>
                            <Setter Property="MinWidth" TargetName="PART_textBlock" Value="20"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--VECTOR BOX STYLE-->
    <Style TargetType="{x:Type ctlr:VectorBox}" x:Key="{x:Type ctlr:VectorBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GrayBrush2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GrayBrush5}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctlr:VectorBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type ctlr:NumberBox}" BasedOn="{StaticResource {x:Type ctlr:NumberBox}}">
                            <Setter Property="MinWidth" Value="50"/>
                            <Setter Property="ToolTipService.InitialShowDelay" Value="3000"/>
                            <Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
                            <Setter Property="Multiplier" Value="{Binding Multiplier, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="border" SnapsToDevicePixels="True" Margin="0,2,0,3"
                            Background="{TemplateBinding Background}" Padding="5,2"
                            BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--Grid Display-->
                        <Grid x:Name="grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="columnDefinition0"/>
                                <ColumnDefinition x:Name="columnDefinition1"/>
                                <ColumnDefinition x:Name="columnDefinition2"/>
                                <ColumnDefinition x:Name="columnDefinition3"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="rowDefinition0"/>
                                <RowDefinition x:Name="rowDefinition1"/>
                                <RowDefinition x:Name="rowDefinition2"/>
                                <RowDefinition x:Name="rowDefinition3"/>
                            </Grid.RowDefinitions>
                            <ctlr:NumberBox x:Name="nbX" Foreground="{DynamicResource Editor.RedBrush}" 
                                            Value="{Binding X, RelativeSource={RelativeSource TemplatedParent}}" 
                                            ToolTip="X value"/>
                            <ctlr:NumberBox x:Name="nbY" Foreground="{DynamicResource Editor.GreenBrush}" 
                                            Value="{Binding Y, RelativeSource={RelativeSource TemplatedParent}}" 
                                            ToolTip="Y value"/>
                            <ctlr:NumberBox x:Name="nbZ" Foreground="{DynamicResource Editor.BlueBrush}" 
                                            Value="{Binding Z, RelativeSource={RelativeSource TemplatedParent}}" 
                                            ToolTip="Z value"/>
                            <ctlr:NumberBox x:Name="nbW" Foreground="{DynamicResource Editor.FontBrush}" 
                                            Value="{Binding W, RelativeSource={RelativeSource TemplatedParent}}" 
                                            ToolTip="W value" Visibility="Collapsed"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--Vertical Orientation-->
                        <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical">
                            <Setter Property="Grid.Row" TargetName="nbX" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="nbY" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="nbZ" Value="2"/>
                            <Setter Property="Grid.Row" TargetName="nbW" Value="3"/>
                            <Setter Property="Width" TargetName="columnDefinition1" Value="auto"/>
                            <Setter Property="Width" TargetName="columnDefinition2" Value="auto"/>
                            <Setter Property="Width" TargetName="columnDefinition3" Value="auto"/>
                        </DataTrigger>

                        <!--Horizontal Orientation-->
                        <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal">
                            <Setter Property="Grid.Column" TargetName="nbX" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="nbY" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="nbZ" Value="2"/>
                            <Setter Property="Grid.Column" TargetName="nbW" Value="3"/>
                            <Setter Property="Height" TargetName="rowDefinition1" Value="auto"/>
                            <Setter Property="Height" TargetName="rowDefinition2" Value="auto"/>
                            <Setter Property="Height" TargetName="rowDefinition3" Value="auto"/>
                        </DataTrigger>

                        <!--Vector 2 (collapses the 3rd dimensional input)-->
                        <DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="Vector2">
                            <Setter Property="Width" TargetName="columnDefinition2" Value="auto"/>
                            <Setter Property="Width" TargetName="columnDefinition3" Value="auto"/>
                            <Setter Property="Height" TargetName="rowDefinition2" Value="auto"/>
                            <Setter Property="Height" TargetName="rowDefinition3" Value="auto"/>
                            <Setter Property="Visibility" TargetName="nbZ" Value="Collapsed"/>
                        </DataTrigger>

                        <!--Vector 3 (sets 4th column and row to auto)-->
                        <DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="Vector3">
                            <Setter Property="Width" TargetName="columnDefinition3" Value="auto"/>
                            <Setter Property="Height" TargetName="rowDefinition3" Value="auto"/>
                        </DataTrigger>

                        <!--Vector 4 (makes 4th row/column visible)-->
                        <DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="Vector4">
                            <Setter Property="Visibility" TargetName="nbW" Value="Visible"/>
                        </DataTrigger>

                        <!--MOUSE OVER STYLE-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Editor.Window.GrayBrush6}"/>
                        </Trigger>

                        <!--DISABLED STYLE-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>